basePath: /
definitions:
  types.BaseResponse:
    properties:
      message: {}
    type: object
  types.FieldErrors:
    properties:
      fields:
        additionalProperties:
          type: string
        type: object
      msg:
        type: string
      status:
        type: integer
    type: object
  types.Folder:
    properties:
      date_created:
        type: string
      folder_id:
        type: string
      last_edited:
        type: string
      name:
        type: string
      user_id:
        type: string
    type: object
  types.MutateFolder:
    properties:
      folder_name:
        type: string
    required:
    - folder_name
    type: object
  types.MutateNote:
    properties:
      folder_id:
        type: string
      note_description:
        type: string
      note_name:
        type: string
    required:
    - folder_id
    - note_description
    - note_name
    type: object
  types.Note:
    properties:
      date_created:
        type: string
      description:
        type: string
      folder_id:
        type: string
      last_edited:
        type: string
      name:
        type: string
      note_id:
        type: string
      user_id:
        type: string
    type: object
  types.PatchNote:
    properties:
      note_description:
        type: string
      note_name:
        type: string
    required:
    - note_description
    - note_name
    type: object
  types.UpdateDataResponse:
    properties:
      MatchedCount:
        type: integer
      ModifiedCount:
        type: integer
      UpsertedCount:
        type: integer
      UpsertedID:
        type: string
    type: object
host: 127.0.0.1:8100
info:
  contact:
    email: stephen.sanwo@icloud.com
    name: Stephen Sanwo
  description: Axon Core API
  license:
    name: MIT
    url: https://mit-license.org
  termsOfService: stephen.sanwo@icloud.com
  title: Axon Core API
  version: "1.0"
paths:
  /callback:
    get:
      consumes:
      - application/json
      description: AuthCallback
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.BaseResponse'
      summary: AuthCallback
      tags:
      - Auth
  /folder:
    delete:
      consumes:
      - application/json
      description: Delete Folder
      operationId: delete-folder
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Records Deleted
          schema:
            type: int
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete Folder
      tags:
      - Folder
    get:
      consumes:
      - application/json
      description: Query Folder
      operationId: get-folder
      parameters:
      - description: Folder ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Folder
          schema:
            $ref: '#/definitions/types.Folder'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Query Folder
      tags:
      - Folder
    patch:
      consumes:
      - application/json
      description: Patch Folder
      operationId: patch-folder
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      - description: Folder Object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MutateFolder'
      produces:
      - application/json
      responses:
        "200":
          description: Folder Update Result
          schema:
            $ref: '#/definitions/types.UpdateDataResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessible Entity
          schema:
            $ref: '#/definitions/types.FieldErrors'
      summary: Patch Folder
      tags:
      - Folder
    post:
      consumes:
      - application/json
      description: Create New Folder
      operationId: post-folder
      parameters:
      - description: Folder Object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MutateFolder'
      produces:
      - application/json
      responses:
        "201":
          description: Folder Id
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessible Entity
          schema:
            $ref: '#/definitions/types.FieldErrors'
      summary: Create New Folder
      tags:
      - Folder
  /folders:
    get:
      consumes:
      - application/json
      description: FoldersHandler
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Folder'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: FoldersHandler
      tags:
      - Folder
  /note:
    delete:
      consumes:
      - application/json
      description: Delete Note
      operationId: delete-note
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      - description: Note ID
        in: query
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Records Deleted
          schema:
            type: int
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete Note
      tags:
      - Note
    get:
      consumes:
      - application/json
      description: Query Note
      operationId: get-note
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      - description: Note ID
        in: query
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Note
          schema:
            $ref: '#/definitions/types.Note'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Query Note
      tags:
      - Note
    patch:
      consumes:
      - application/json
      description: Patch Note
      operationId: patch-note
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      - description: Note ID
        in: query
        name: note_id
        required: true
        type: string
      - description: Note Object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.PatchNote'
      produces:
      - application/json
      responses:
        "200":
          description: Note Update Result
          schema:
            $ref: '#/definitions/types.UpdateDataResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessible Entity
          schema:
            $ref: '#/definitions/types.FieldErrors'
      summary: Patch Note
      tags:
      - Note
    post:
      consumes:
      - application/json
      description: Create New Note
      operationId: post-note
      parameters:
      - description: Note Object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/types.MutateNote'
      produces:
      - application/json
      responses:
        "201":
          description: Note Id
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessible Entity
          schema:
            $ref: '#/definitions/types.FieldErrors'
      summary: Create New Note
      tags:
      - Note
  /notes:
    get:
      consumes:
      - application/json
      description: Query all notes
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Note'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Query all notes
      tags:
      - Note
  /ping:
    get:
      description: Ping the server
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.BaseResponse'
      summary: Ping the server
      tags:
      - Ping
swagger: "2.0"
