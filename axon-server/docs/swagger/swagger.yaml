basePath: /
definitions:
  axon-server_lib_types.BaseResponse:
    properties:
      message: {}
    type: object
  axon-server_lib_types.FieldErrors:
    properties:
      fields:
        additionalProperties:
          type: string
        type: object
      msg:
        type: string
      status:
        type: integer
    type: object
  axon-server_lib_types.MutateFolder:
    properties:
      folder_name:
        type: string
    required:
    - folder_name
    type: object
  axon-server_lib_types.MutateNote:
    properties:
      description:
        type: string
      folder_id:
        type: string
      note_name:
        type: string
    required:
    - description
    - folder_id
    - note_name
    type: object
  axon-server_lib_types.PatchNote:
    properties:
      description:
        type: string
      note_name:
        type: string
    type: object
  axon-server_lib_types.PostPublicNote:
    properties:
      folder_id:
        type: string
      note_id:
        type: string
      public_note_id:
        type: string
    required:
    - folder_id
    - note_id
    - public_note_id
    type: object
  axon-server_lib_types.UpdateDataResponse:
    properties:
      MatchedCount:
        type: integer
      ModifiedCount:
        type: integer
      UpsertedCount:
        type: integer
      UpsertedID:
        type: string
    type: object
  types.Edge:
    properties:
      animated:
        type: boolean
      edge_id:
        type: string
      edge_type:
        type: string
      folder_id:
        type: string
      label:
        type: string
      last_edited:
        type: string
      note_id:
        type: string
      source:
        type: string
      target:
        type: string
      user_id:
        type: string
    type: object
  types.Folder:
    properties:
      date_created:
        type: string
      folder_id:
        type: string
      folder_name:
        type: string
      last_edited:
        type: string
      user_id:
        type: string
    type: object
  types.FolderList:
    properties:
      date_created:
        type: string
      folder_id:
        type: string
      folder_name:
        type: string
      last_edited:
        type: string
      notes:
        items:
          $ref: '#/definitions/types.NoteSummary'
        type: array
      user_id:
        type: string
    type: object
  types.Node:
    properties:
      arialLabel:
        type: string
      className:
        type: string
      connectable:
        type: boolean
      content:
        $ref: '#/definitions/types.NodeContent'
      data:
        $ref: '#/definitions/types.NodeData'
      deletable:
        type: boolean
      dragHandle:
        type: string
      dragging:
        type: boolean
      expandParent:
        type: boolean
      extent:
        type: string
      focusable:
        type: boolean
      folder_id:
        type: string
      height:
        type: number
      hidden:
        type: boolean
      id:
        description: Same as node id
        type: string
      last_edited:
        type: string
      node_id:
        type: string
      note_id:
        type: string
      parentNode:
        type: string
      position:
        $ref: '#/definitions/types.NodePosition'
      positionAbsolute:
        type: boolean
      selectable:
        type: boolean
      selected:
        type: boolean
      sourcePosition:
        $ref: '#/definitions/types.NodePosition'
      style:
        additionalProperties: true
        type: object
      targetPosition:
        $ref: '#/definitions/types.NodePosition'
      type:
        type: string
      user_id:
        type: string
      width:
        type: number
      zIndex:
        type: integer
    type: object
  types.NodeCodeContent:
    properties:
      code:
        type: string
      fileName:
        type: string
      language:
        type: string
      validLanguage:
        type: boolean
    type: object
  types.NodeContent:
    properties:
      content_data:
        type: string
      content_header:
        type: string
      content_type:
        type: string
    type: object
  types.NodeData:
    properties:
      code:
        $ref: '#/definitions/types.NodeCodeContent'
      contentType:
        type: string
      description:
        type: string
      icon:
        type: string
      link:
        $ref: '#/definitions/types.NodeLinkContent'
      markdown:
        $ref: '#/definitions/types.NodeMarkdownContent'
      media:
        $ref: '#/definitions/types.NodeMediaContent'
      node_id:
        type: string
      node_styles:
        $ref: '#/definitions/types.NodeStyles'
      node_theme:
        $ref: '#/definitions/types.NodeThemes'
      table:
        $ref: '#/definitions/types.NodeTableContent'
      title:
        type: string
    type: object
  types.NodeLinkContent:
    properties:
      isLoadable:
        type: boolean
      url:
        type: string
    type: object
  types.NodeMarkdownContent:
    properties:
      data:
        type: string
      showPreview:
        type: boolean
    type: object
  types.NodeMediaContent:
    properties:
      fileName:
        type: string
      remoteUrl:
        type: string
      size:
        type: integer
      type:
        type: string
    type: object
  types.NodePosition:
    properties:
      x:
        type: number
      "y":
        type: number
    type: object
  types.NodeStyles:
    properties:
      background_color:
        type: string
      border_color:
        type: string
      font_alignment:
        type: string
      font_color:
        type: string
      font_weight:
        type: integer
    type: object
  types.NodeTableContent:
    properties:
      data:
        type: string
      renderTable:
        type: boolean
    type: object
  types.NodeThemes:
    properties:
      color:
        type: string
      style:
        type: string
    type: object
  types.Note:
    properties:
      date_created:
        type: string
      description:
        type: string
      edges:
        items:
          $ref: '#/definitions/types.Edge'
        type: array
      folder_id:
        type: string
      last_edited:
        type: string
      nodes:
        items:
          $ref: '#/definitions/types.Node'
        type: array
      note_id:
        type: string
      note_name:
        type: string
      user_id:
        type: string
    type: object
  types.NoteSummary:
    properties:
      date_created:
        type: string
      description:
        type: string
      folder_id:
        type: string
      last_edited:
        type: string
      note_id:
        type: string
      note_name:
        type: string
      user_id:
        type: string
    type: object
host: 127.0.0.1:8100
info:
  contact:
    email: stephen.sanwo@icloud.com
    name: Stephen Sanwo
  description: Axon Core API
  license:
    name: MIT
    url: https://mit-license.org
  termsOfService: stephen.sanwo@icloud.com
  title: Axon Core API
  version: "1.0"
paths:
  /folder:
    delete:
      consumes:
      - application/json
      description: Delete Folder
      operationId: delete-folder
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Records Deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete Folder
      tags:
      - Folder
    get:
      consumes:
      - application/json
      description: Query Folder
      operationId: get-folder
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Folder
          schema:
            $ref: '#/definitions/types.Folder'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Query Folder
      tags:
      - Folder
    patch:
      consumes:
      - application/json
      description: Patch Folder
      operationId: patch-folder
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      - description: Folder Object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/axon-server_lib_types.MutateFolder'
      produces:
      - application/json
      responses:
        "200":
          description: Update Response
          schema:
            $ref: '#/definitions/axon-server_lib_types.UpdateDataResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessible Entity
          schema:
            $ref: '#/definitions/axon-server_lib_types.FieldErrors'
      summary: Patch Folder
      tags:
      - Folder
    post:
      consumes:
      - application/json
      description: Create New Folder
      operationId: post-folder
      parameters:
      - description: Folder Object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/axon-server_lib_types.MutateFolder'
      produces:
      - application/json
      responses:
        "201":
          description: Folder Id
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessible Entity
          schema:
            $ref: '#/definitions/axon-server_lib_types.FieldErrors'
      summary: Create New Folder
      tags:
      - Folder
  /folder-list:
    get:
      consumes:
      - application/json
      description: Query folder list from db or cache
      operationId: get-folder-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.FolderList'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Query folder list from db or cache
      tags:
      - Folder
  /folders:
    get:
      consumes:
      - application/json
      description: Query all folders
      operationId: get-folders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Folder'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Query all folders
      tags:
      - Folder
  /get-public-note:
    get:
      consumes:
      - application/json
      description: Query Public Note
      operationId: get-public-note
      parameters:
      - description: Public Note ID
        in: query
        name: public_note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Public Note
          schema:
            $ref: '#/definitions/types.Note'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Query Public Note
      tags:
      - Public Note
  /get-shared-note:
    get:
      consumes:
      - application/json
      description: Query Shared Note
      operationId: get-shared-note
      parameters:
      - description: Note ID
        in: query
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Public Note ID
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Query Shared Note
      tags:
      - Note
  /note:
    delete:
      consumes:
      - application/json
      description: Delete Note
      operationId: delete-note
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      - description: Note ID
        in: query
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Records Deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete Note
      tags:
      - Note
    get:
      consumes:
      - application/json
      description: Query Note
      operationId: get-note
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      - description: Note ID
        in: query
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Note
          schema:
            $ref: '#/definitions/types.Note'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Query Note
      tags:
      - Note
    patch:
      consumes:
      - application/json
      description: Patch Note
      operationId: patch-note
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      - description: Note ID
        in: query
        name: note_id
        required: true
        type: string
      - description: Note Object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/axon-server_lib_types.PatchNote'
      produces:
      - application/json
      responses:
        "200":
          description: Update Response
          schema:
            $ref: '#/definitions/axon-server_lib_types.UpdateDataResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessible Entity
          schema:
            $ref: '#/definitions/axon-server_lib_types.FieldErrors'
      summary: Patch Note
      tags:
      - Note
    post:
      consumes:
      - application/json
      description: Create New Note
      operationId: post-note
      parameters:
      - description: Note Object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/axon-server_lib_types.MutateNote'
      produces:
      - application/json
      responses:
        "201":
          description: Note Id
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessible Entity
          schema:
            $ref: '#/definitions/axon-server_lib_types.FieldErrors'
      summary: Create New Note
      tags:
      - Note
  /note-summary:
    get:
      consumes:
      - application/json
      description: Query Note Summary
      operationId: get-note-summary
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      - description: Note ID
        in: query
        name: note_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: NoteSummary
          schema:
            $ref: '#/definitions/types.NoteSummary'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Query Note Summary
      tags:
      - Note
  /notes:
    get:
      consumes:
      - application/json
      description: Query all notes
      operationId: get-notes
      parameters:
      - description: Folder ID
        in: query
        name: folder_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Notes
          schema:
            items:
              $ref: '#/definitions/types.Note'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Query all notes
      tags:
      - Note
  /ping:
    get:
      description: Ping the server
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/axon-server_lib_types.BaseResponse'
      summary: Ping the server
      tags:
      - Ping
  /publish-public-note:
    post:
      consumes:
      - application/json
      description: Create New Public Note
      operationId: publish-public-note
      parameters:
      - description: Public Note Request Object
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/axon-server_lib_types.PostPublicNote'
      produces:
      - application/json
      responses:
        "201":
          description: Public Note Id
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "422":
          description: Unprocessible Entity
          schema:
            $ref: '#/definitions/axon-server_lib_types.FieldErrors'
      summary: Create New Public Note
      tags:
      - Note
  /upload-media:
    post:
      consumes:
      - multipart/form-data
      description: Upload a media file
      operationId: upload-media
      parameters:
      - description: Media file to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: File uploaded successfully
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Upload media file
      tags:
      - Note
swagger: "2.0"
